"""initial_tables fr

Revision ID: 4ca9feb73097
Revises: a34a5fc8993a
Create Date: 2025-02-04 08:27:32.956495

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4ca9feb73097'
down_revision: Union[str, None] = 'a34a5fc8993a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('whatsapp_number', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('timezone', sa.String(length=50), server_default='UTC', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('last_active', sa.DateTime(timezone=True), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('whatsapp_number')
    )
    op.create_table('ai_interactions',
    sa.Column('interaction_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('message_text', sa.Text(), nullable=False),
    sa.Column('response_text', sa.Text(), nullable=False),
    sa.Column('intent', sa.String(length=50), nullable=True),
    sa.Column('context_data', sa.JSON(), nullable=True),
    sa.Column('effectiveness_rating', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint('effectiveness_rating BETWEEN 1 AND 5'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('interaction_id')
    )
    op.create_table('goals',
    sa.Column('goal_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('goal_type', sa.String(length=50), nullable=True),
    sa.Column('target_value', sa.Numeric(), nullable=True),
    sa.Column('current_value', sa.Numeric(), server_default='0', nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('frequency', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), server_default='active', nullable=True),
    sa.Column('deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("goal_type IN ('fitness', 'learning', 'project', 'habit', 'personal')"),
    sa.CheckConstraint("status IN ('active', 'achieved', 'abandoned')"),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('goal_id')
    )
    op.create_table('procrastination_patterns',
    sa.Column('pattern_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('trigger_type', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('frequency', sa.Integer(), server_default='1', nullable=True),
    sa.Column('impact_level', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint('impact_level BETWEEN 1 AND 5'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('pattern_id')
    )
    op.create_table('projects',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), server_default='planning', nullable=True),
    sa.Column('priority', sa.String(length=10), server_default='medium', nullable=True),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('deadline', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("priority IN ('high', 'medium', 'low')"),
    sa.CheckConstraint("status IN ('planning', 'active', 'paused', 'completed', 'abandoned')"),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_table('tasks',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), server_default='todo', nullable=True),
    sa.Column('priority', sa.String(length=10), server_default='medium', nullable=True),
    sa.Column('estimated_duration', sa.Integer(), nullable=True),
    sa.Column('actual_duration', sa.Integer(), nullable=True),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('parent_task_id', sa.Integer(), nullable=True),
    sa.CheckConstraint("priority IN ('high', 'medium', 'low')"),
    sa.CheckConstraint("status IN ('todo', 'in_progress', 'blocked', 'completed')"),
    sa.CheckConstraint('parent_task_id != task_id'),
    sa.ForeignKeyConstraint(['parent_task_id'], ['tasks.task_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.project_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_table('progress_logs',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('log_type', sa.String(length=50), nullable=False),
    sa.Column('related_task_id', sa.Integer(), nullable=True),
    sa.Column('related_goal_id', sa.Integer(), nullable=True),
    sa.Column('related_project_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Numeric(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('media_url', sa.Text(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('energy_level', sa.Integer(), nullable=True),
    sa.Column('mood', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("log_type IN ('task_update', 'goal_progress', 'media_upload', 'activity', 'focus_session')"),
    sa.CheckConstraint('energy_level BETWEEN 1 AND 5'),
    sa.ForeignKeyConstraint(['related_goal_id'], ['goals.goal_id'], ),
    sa.ForeignKeyConstraint(['related_project_id'], ['projects.project_id'], ),
    sa.ForeignKeyConstraint(['related_task_id'], ['tasks.task_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('progress_logs')
    op.drop_table('tasks')
    op.drop_table('projects')
    op.drop_table('procrastination_patterns')
    op.drop_table('goals')
    op.drop_table('ai_interactions')
    op.drop_table('users')
    # ### end Alembic commands ###
